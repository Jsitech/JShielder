[ -z "$PS1" ] && return

HISTCONTROL=ignoredups:ignorespace

shopt -s histappend

HISTSIZE=1000
HISTFILESIZE=2000

shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls -lh --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF --color=auto'
alias la='ls -A --color=auto'
alias l='ls -CF --color=auto'
alias .='cd ..'
alias ls='ls -l --color=auto'
alias arestart='sudo service apache2 restart'
alias sysupdate='sudo apt-get update; sudo apt-get upgrade -y'
alias doinstall='sudo apt-get install'
alias mv='mv -i'
alias cp='cp -i'
alias rm='rm -i'
alias mysql='mysql -uroot -p'
alias tree='tree --dirsfirst'

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

## XXX: Enable selecting digest, falling back on a sensible default like SHA2-256 or BLAKE2b512
md5() {
		while [ $# -gt 0 ]
		do
			printf "MD5 Digest of '%s':\n" "${1}"
			if [ ! -f "${1}" ]
			then
				printf "%s" | openssl dgst -r -md5 - | cut -d' ' -f1
			else
				openssl dgst -r -md5 "${1}" | cut -d' ' -f1
			fi
			shift
		done
}

